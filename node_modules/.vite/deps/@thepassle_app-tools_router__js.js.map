{
  "version": 3,
  "sources": ["../../@thepassle/app-tools/utils/log.js", "../../@thepassle/app-tools/router/index.js"],
  "sourcesContent": ["const KEY = Symbol.for('app-tools::log::1.x');\n\nglobalThis[KEY] = { \n  setDebug, \n  debug: 'window' in globalThis ? new URL(window.location.href).searchParams.has('app-tools-debug') : false,\n};\n\n/**\n * @param {boolean} value \n */\nexport function setDebug(value) {\n  globalThis[KEY].debug = !!value;\n}\n\n/**\n * @returns {boolean}\n */\nexport function getDebug() {\n  return globalThis[KEY].debug;\n}\n\n/**\n * @param {string} action - describing the action\n * @param {*} [data] - any js value\n */\nexport function log(action, data) {\n  if(globalThis[KEY].debug) {\n    console.groupCollapsed(`[app-tools] ${action}`);\n    if(data) {\n      console.log(data);\n    }\n    console.groupEnd();\n  }\n}\n\n/**\n * @param {string} title \n * @returns {(action: string, data?: any) => void}\n */\nexport function createLogger(title) {\n  return (action, data) => {\n    log(`${title}: ${action}`, data);\n  }\n}", "import { createLogger } from '../utils/log.js';\nconst log = createLogger('router');\n\nclass RouteEvent extends Event {\n  /**\n   * @param {Context} context \n   */\n  constructor(context) {\n    super('route-changed');\n    this.context = context;\n  }\n}\n\n/**\n * @typedef {import('./types.js').Plugin} Plugin\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').RouteDefinition} RouteDefinition\n * @typedef {import('./types.js').Route} Route\n * @typedef {import('./types.js').Config} Config\n */\n\nexport class Router extends EventTarget {\n  context = {\n    params: {},\n    query: {},\n    title: '',\n    url: new URL(window.location.href),\n  }\n\n  /**\n   * @param {Config} config \n   */\n  constructor(config) {\n    super();\n    this.config = config;\n\n    /** @type {Route[]} */\n    this.routes = config.routes.map((route) => {\n      const r = /** @type {unknown} */ ({\n        ...route,\n        // @ts-ignore\n        urlPattern: new URLPattern({\n          pathname: route.path,\n          baseURL: window.location.href,\n          search: '*',\n          hash: '*',\n        }),\n      });\n      return /** @type {Route} */ (r);\n    });\n    log('Initialized routes', this.routes);\n\n    queueMicrotask(() => {\n      this.navigate(new URL(window.location.href), { replace: true });\n    });\n    window.addEventListener('popstate', this._onPopState);\n    window.addEventListener('click', this._onAnchorClick);\n  }\n\n  uninstall() {\n    window.removeEventListener('popstate', this._onPopState);\n    window.removeEventListener('click', this._onAnchorClick);\n  }\n\n  get url() {\n    return new URL(window.location.href);\n  }\n\n  get fallback() {\n    return new URL(\n      this.config?.fallback || this.baseUrl.href.substring(window.location.origin.length), \n      this.baseUrl\n    )\n  }\n\n  get baseUrl() {\n    return new URL('./', document.baseURI);\n  }\n\n  /**\n   * @template RenderResult\n   */\n  render() {\n    log(`Rendering route ${this.context.url.pathname}${this.context.url.search}${this.context.url.hash}`, { context: this.context, route: this.route });\n    return /** @type {RenderResult} */ (this.route?.render?.(this.context));\n  }\n\n  /**\n   * @private\n   * @param {URL} url \n   * @returns {Route | null}\n   */\n  _matchRoute(url) {\n    for (const route of this.routes) {\n      const match = route.urlPattern.exec(url);\n      if (match) {\n        const { title } = route;\n        const query = Object.fromEntries(new URLSearchParams(url.search)); \n        const params = match?.pathname?.groups ?? {};\n        this.context = {\n          url,\n          title: typeof title === 'function' ? title({params, query, url}) : title,\n          params,\n          query,\n        }\n        return route;\n      }\n    }\n    log(`No route matched for ${url.pathname}${url.search}${url.hash}`, url);\n    return null;\n  }\n  \n  /**\n   * @private\n   */\n  _notifyUrlChanged() {\n    this.dispatchEvent(new RouteEvent(this.context));\n  }\n\n  /**\n   * @private\n   */\n  _onPopState = () => {\n    this.navigate(new URL(window.location.href), { backNav: true });\n  }\n\n  /**\n   * @private\n   */\n  _onAnchorClick = (e) => {\n    if (\n      e.defaultPrevented ||\n      e.button !== 0 ||\n      e.metaKey ||\n      e.ctrlKey ||\n      e.shiftKey\n    ) {\n      return;\n    }\n\n    const a = e.composedPath().find((el) => el.tagName === 'A');\n    if (!a || !a.href) return;\n\n    const url = new URL(a.href);\n\n    if (this.url.href === url.href) return;\n    if (url.host !== window.location.host) return;\n    if (a.hasAttribute('download') || a.href.includes('mailto:')) return;\n\n    const target = a.getAttribute('target');\n    if (target && target !== '' && target !== '_self') return;\n    \n    e.preventDefault();\n    this.navigate(url);\n  }\n\n  /**\n   * @private \n   */\n  _collectPlugins(route) {\n    return [\n      ...(this.config?.plugins ?? []), \n      ...(route?.plugins ?? []),\n    ]\n  }\n\n  /**\n   * @param {string | URL} url The URL to navigate to.\n   * @param {{\n   *    backNav?: boolean,\n   *    replace?: boolean,\n   *  }} options options An options object to configure the navigation. The backNav property specifies whether the navigation is a backward navigation, which doesn't push the navigation into browser nav history.\n   */\n  async navigate(url, options = {}) {\n    if (typeof url === 'string') {\n      url = new URL(url, this.baseUrl);\n    }\n    \n    let route = this._matchRoute(url) || this._matchRoute(this.fallback);\n    log(`Navigating to ${url.pathname}${url.search}${url.hash}`, { context: this.context, route: this.route });\n\n    /** @type {Plugin[]} */\n    let plugins = this._collectPlugins(route);\n\n    for (const plugin of plugins) {\n      try {\n        const result = await plugin?.shouldNavigate?.(this.context);\n        if (result) {\n          const condition = await result.condition();\n          if (!condition) {\n            url = new URL(result.redirect, this.baseUrl);\n            route = this._matchRoute(url) || this._matchRoute(this.fallback);\n            plugins = this._collectPlugins(route);\n            log('Redirecting', { context: this.context, route: this.route });\n          }\n        }\n      } catch(e) {\n        log(`Plugin \"${plugin.name}\" error on shouldNavigate hook`, e);\n        throw e;\n      }\n    }\n\n    this.route = route;\n\n    if (!this.route) {\n      throw new Error(`[ROUTER] No route or fallback matched for url ${url}`);\n    }\n\n    for (const plugin of plugins) {\n      try {\n        await plugin?.beforeNavigation?.(this.context);\n      } catch(e) {\n        log(`Plugin \"${plugin.name}\" error on beforeNavigation hook`, e);\n        throw e;\n      }\n    }\n\n    if (options?.replace) {\n      window.history.replaceState(null, '', `${url.pathname}${url.search}${url.hash}`);\n    } else if (!options.backNav) {\n      window.history.pushState(null, '', `${url.pathname}${url.search}${url.hash}`);\n    }\n\n    document.title = this.context.title;\n    this._notifyUrlChanged();\n\n    for (const plugin of plugins) {\n      try {\n        await plugin?.afterNavigation?.(this.context);\n      } catch(e) {\n        log(`Plugin \"${plugin.name}\" error on afterNavigation hook`, e);\n        throw e;\n      }\n    }\n  }\n}\n"],
  "mappings": ";;;;;AAAA,IAAM,MAAM,OAAO,IAAI,qBAAqB;AAE5C,WAAW,GAAG,IAAI;AAAA,EAChB;AAAA,EACA,OAAO,YAAY,aAAa,IAAI,IAAI,OAAO,SAAS,IAAI,EAAE,aAAa,IAAI,iBAAiB,IAAI;AACtG;AAKO,SAAS,SAAS,OAAO;AAC9B,aAAW,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC5B;AAaO,SAAS,IAAI,QAAQ,MAAM;AAChC,MAAG,WAAW,GAAG,EAAE,OAAO;AACxB,YAAQ,eAAe,eAAe,MAAM,EAAE;AAC9C,QAAG,MAAM;AACP,cAAQ,IAAI,IAAI;AAAA,IAClB;AACA,YAAQ,SAAS;AAAA,EACnB;AACF;AAMO,SAAS,aAAa,OAAO;AAClC,SAAO,CAAC,QAAQ,SAAS;AACvB,QAAI,GAAG,KAAK,KAAK,MAAM,IAAI,IAAI;AAAA,EACjC;AACF;;;AC1CA,IAAMA,OAAM,aAAa,QAAQ;AAEjC,IAAM,aAAN,cAAyB,MAAM;AAAA;AAAA;AAAA;AAAA,EAI7B,YAAY,SAAS;AACnB,UAAM,eAAe;AACrB,SAAK,UAAU;AAAA,EACjB;AACF;AAUO,IAAM,SAAN,cAAqB,YAAY;AAAA;AAAA;AAAA;AAAA,EAWtC,YAAY,QAAQ;AAClB,UAAM;AAXR,mCAAU;AAAA,MACR,QAAQ,CAAC;AAAA,MACT,OAAO,CAAC;AAAA,MACR,OAAO;AAAA,MACP,KAAK,IAAI,IAAI,OAAO,SAAS,IAAI;AAAA,IACnC;AA+FA;AAAA;AAAA;AAAA,uCAAc,MAAM;AAClB,WAAK,SAAS,IAAI,IAAI,OAAO,SAAS,IAAI,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,IAChE;AAKA;AAAA;AAAA;AAAA,0CAAiB,CAAC,MAAM;AACtB,UACE,EAAE,oBACF,EAAE,WAAW,KACb,EAAE,WACF,EAAE,WACF,EAAE,UACF;AACA;AAAA,MACF;AAEA,YAAM,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,OAAO,GAAG,YAAY,GAAG;AAC1D,UAAI,CAAC,KAAK,CAAC,EAAE,KAAM;AAEnB,YAAM,MAAM,IAAI,IAAI,EAAE,IAAI;AAE1B,UAAI,KAAK,IAAI,SAAS,IAAI,KAAM;AAChC,UAAI,IAAI,SAAS,OAAO,SAAS,KAAM;AACvC,UAAI,EAAE,aAAa,UAAU,KAAK,EAAE,KAAK,SAAS,SAAS,EAAG;AAE9D,YAAM,SAAS,EAAE,aAAa,QAAQ;AACtC,UAAI,UAAU,WAAW,MAAM,WAAW,QAAS;AAEnD,QAAE,eAAe;AACjB,WAAK,SAAS,GAAG;AAAA,IACnB;AAxHE,SAAK,SAAS;AAGd,SAAK,SAAS,OAAO,OAAO,IAAI,CAAC,UAAU;AACzC,YAAM;AAAA;AAAA,QAA4B;AAAA,UAChC,GAAG;AAAA;AAAA,UAEH,YAAY,IAAI,WAAW;AAAA,YACzB,UAAU,MAAM;AAAA,YAChB,SAAS,OAAO,SAAS;AAAA,YACzB,QAAQ;AAAA,YACR,MAAM;AAAA,UACR,CAAC;AAAA,QACH;AAAA;AACA;AAAA;AAAA,QAA6B;AAAA;AAAA,IAC/B,CAAC;AACD,IAAAA,KAAI,sBAAsB,KAAK,MAAM;AAErC,mBAAe,MAAM;AACnB,WAAK,SAAS,IAAI,IAAI,OAAO,SAAS,IAAI,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,IAChE,CAAC;AACD,WAAO,iBAAiB,YAAY,KAAK,WAAW;AACpD,WAAO,iBAAiB,SAAS,KAAK,cAAc;AAAA,EACtD;AAAA,EAEA,YAAY;AACV,WAAO,oBAAoB,YAAY,KAAK,WAAW;AACvD,WAAO,oBAAoB,SAAS,KAAK,cAAc;AAAA,EACzD;AAAA,EAEA,IAAI,MAAM;AACR,WAAO,IAAI,IAAI,OAAO,SAAS,IAAI;AAAA,EACrC;AAAA,EAEA,IAAI,WAAW;AApEjB;AAqEI,WAAO,IAAI;AAAA,QACT,UAAK,WAAL,mBAAa,aAAY,KAAK,QAAQ,KAAK,UAAU,OAAO,SAAS,OAAO,MAAM;AAAA,MAClF,KAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,IAAI,UAAU;AACZ,WAAO,IAAI,IAAI,MAAM,SAAS,OAAO;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AAlFX;AAmFI,IAAAA,KAAI,mBAAmB,KAAK,QAAQ,IAAI,QAAQ,GAAG,KAAK,QAAQ,IAAI,MAAM,GAAG,KAAK,QAAQ,IAAI,IAAI,IAAI,EAAE,SAAS,KAAK,SAAS,OAAO,KAAK,MAAM,CAAC;AAClJ;AAAA;AAAA,OAAoC,gBAAK,UAAL,mBAAY,WAAZ,4BAAqB,KAAK;AAAA;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,KAAK;AA5FnB;AA6FI,eAAW,SAAS,KAAK,QAAQ;AAC/B,YAAM,QAAQ,MAAM,WAAW,KAAK,GAAG;AACvC,UAAI,OAAO;AACT,cAAM,EAAE,MAAM,IAAI;AAClB,cAAM,QAAQ,OAAO,YAAY,IAAI,gBAAgB,IAAI,MAAM,CAAC;AAChE,cAAM,WAAS,oCAAO,aAAP,mBAAiB,WAAU,CAAC;AAC3C,aAAK,UAAU;AAAA,UACb;AAAA,UACA,OAAO,OAAO,UAAU,aAAa,MAAM,EAAC,QAAQ,OAAO,IAAG,CAAC,IAAI;AAAA,UACnE;AAAA,UACA;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AACA,IAAAA,KAAI,wBAAwB,IAAI,QAAQ,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,IAAI,GAAG;AACvE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAClB,SAAK,cAAc,IAAI,WAAW,KAAK,OAAO,CAAC;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EA0CA,gBAAgB,OAAO;AA/JzB;AAgKI,WAAO;AAAA,MACL,KAAI,UAAK,WAAL,mBAAa,YAAW,CAAC;AAAA,MAC7B,IAAI,+BAAO,YAAW,CAAC;AAAA,IACzB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,SAAS,KAAK,UAAU,CAAC,GAAG;AA7KpC;AA8KI,QAAI,OAAO,QAAQ,UAAU;AAC3B,YAAM,IAAI,IAAI,KAAK,KAAK,OAAO;AAAA,IACjC;AAEA,QAAI,QAAQ,KAAK,YAAY,GAAG,KAAK,KAAK,YAAY,KAAK,QAAQ;AACnE,IAAAA,KAAI,iBAAiB,IAAI,QAAQ,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,IAAI,EAAE,SAAS,KAAK,SAAS,OAAO,KAAK,MAAM,CAAC;AAGzG,QAAI,UAAU,KAAK,gBAAgB,KAAK;AAExC,eAAW,UAAU,SAAS;AAC5B,UAAI;AACF,cAAM,SAAS,QAAM,sCAAQ,mBAAR,gCAAyB,KAAK;AACnD,YAAI,QAAQ;AACV,gBAAM,YAAY,MAAM,OAAO,UAAU;AACzC,cAAI,CAAC,WAAW;AACd,kBAAM,IAAI,IAAI,OAAO,UAAU,KAAK,OAAO;AAC3C,oBAAQ,KAAK,YAAY,GAAG,KAAK,KAAK,YAAY,KAAK,QAAQ;AAC/D,sBAAU,KAAK,gBAAgB,KAAK;AACpC,YAAAA,KAAI,eAAe,EAAE,SAAS,KAAK,SAAS,OAAO,KAAK,MAAM,CAAC;AAAA,UACjE;AAAA,QACF;AAAA,MACF,SAAQ,GAAG;AACT,QAAAA,KAAI,WAAW,OAAO,IAAI,kCAAkC,CAAC;AAC7D,cAAM;AAAA,MACR;AAAA,IACF;AAEA,SAAK,QAAQ;AAEb,QAAI,CAAC,KAAK,OAAO;AACf,YAAM,IAAI,MAAM,iDAAiD,GAAG,EAAE;AAAA,IACxE;AAEA,eAAW,UAAU,SAAS;AAC5B,UAAI;AACF,gBAAM,sCAAQ,qBAAR,gCAA2B,KAAK;AAAA,MACxC,SAAQ,GAAG;AACT,QAAAA,KAAI,WAAW,OAAO,IAAI,oCAAoC,CAAC;AAC/D,cAAM;AAAA,MACR;AAAA,IACF;AAEA,QAAI,mCAAS,SAAS;AACpB,aAAO,QAAQ,aAAa,MAAM,IAAI,GAAG,IAAI,QAAQ,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE;AAAA,IACjF,WAAW,CAAC,QAAQ,SAAS;AAC3B,aAAO,QAAQ,UAAU,MAAM,IAAI,GAAG,IAAI,QAAQ,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE;AAAA,IAC9E;AAEA,aAAS,QAAQ,KAAK,QAAQ;AAC9B,SAAK,kBAAkB;AAEvB,eAAW,UAAU,SAAS;AAC5B,UAAI;AACF,gBAAM,sCAAQ,oBAAR,gCAA0B,KAAK;AAAA,MACvC,SAAQ,GAAG;AACT,QAAAA,KAAI,WAAW,OAAO,IAAI,mCAAmC,CAAC;AAC9D,cAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACF;",
  "names": ["log"]
}
